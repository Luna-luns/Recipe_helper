name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: | 
        python3 -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_foodgram/requirements.txt 

    - name: Test with flake8
      run: |
        python3 -m flake8 

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./api_foodgram/
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:v1

      - name: Push frontend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./frontend
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:v1

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm -f backend
            sudo docker rmi lizaliza/foodgram_backend:v1
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d 
